a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html{height:100%}body{line-height:1;font-family:Metropolis}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}._container{width:100%;max-width:1079px;margin:0 auto;padding-right:16px;padding-left:16px}.button{background:#2962ef;cursor:pointer;border:0;min-height:40px;color:#fff;border-radius:4px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;width:-webkit-max-content;width:-moz-max-content;width:max-content}.button_text{background:0 0;color:#2962ef;padding:0}@font-face{font-family:"Metropolis";src:local("Metropolis-Regular"),url(./fonts/Metropolis-Regular.woff2) format("woff2"),url(./fonts/Metropolis-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Metropolis";src:local("Metropolis-Medium"),url(./fonts/Metropolis-Medium.woff2) format("woff2"),url(./fonts/Metropolis-Medium.woff) format("woff");font-weight:500;font-style:normal;font-display:swap}@font-face{font-family:"Metropolis";src:local("Metropolis-SemiBold"),url(./fonts/Metropolis-SemiBold.woff2) format("woff2"),url(./fonts/Metropolis-SemiBold.woff) format("woff");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:"Metropolis";src:local("Metropolis-Bold"),url(./fonts/Metropolis-Bold.woff2) format("woff2"),url(./fonts/Metropolis-Bold.woff) format("woff");font-weight:700;font-style:normal;font-display:swap}@font-face{font-family:"Metropolis";src:local("Metropolis-ExtraBold"),url(./fonts/Metropolis-ExtraBold.woff2) format("woff2"),url(./fonts/Metropolis-ExtraBold.woff) format("woff");font-weight:800;font-style:normal;font-display:swap}.footer{background:#232427;overflow:hidden;margin-top:110px;padding-top:75px;padding-bottom:89px;width:100%}.footer__content-left__text{margin-bottom:109px}.footer__content-left__text h3{font-weight:800;font-size:18px;line-height:18px;color:#fff}.footer__content-left__text p{margin-top:20px;font-weight:400;font-size:14px;line-height:24px;color:#fff}.footer__content-left__descr p{font-weight:400;font-size:14px;line-height:14px;color:#d6d5df}.footer__content-left__descr p span{display:block;margin-top:7px}.footer__content-right__text{margin-bottom:32px}.footer__content-right__text h3{font-weight:600;font-size:16px;line-height:16px;color:#fff;margin-bottom:12px}.footer__content-right__text input{margin-bottom:10px;background:#fff;border-radius:4px;border:0;padding-top:21px;padding-bottom:21px;padding-left:20px}.footer__content-right__text p{font-weight:400;font-size:14px;line-height:24px;color:#fff}.footer__content-right__icons-item{width:50px;height:50px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;background:#5e5c6c;border-radius:100%}.footer__content-right__icons-item svg{width:20px;height:20px;color:#fff}.footer__content-right__icons>:not(:last-child){margin-right:30px}.header{padding-top:16px;padding-bottom:16px}.header,.nav{width:100%}.nav__right,.nav__ul{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.nav__ul{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.nav__ul li{cursor:pointer}.nav__li{font-size:14px;font-weight:600;margin-right:50px;color:#5e5c6c}.nav__li_text{margin-right:19px}.nav__li_block{margin-right:50px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.nav__li_block img{margin-right:8px}.nav__li_logo{margin-right:615px;font-weight:800;font-size:18px;line-height:18px}.nav__li_button{margin-right:0}.nav__li_button button{font-size:14px;font-weight:400;min-width:110px;min-height:40px}.burger{position:relative;z-index:999;display:none;width:35px;height:20px}.burger-line{background:#2962ef;position:absolute;height:2px;width:inherit}.burger .second,.burger .third{top:8px}.burger .fourth{top:16px}.burger__menu{background:#2962ef;padding-top:20px;padding-bottom:20px;color:#fff;font-size:32px;display:none;position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:10}.burger__menu-list{width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.burger__menu-list>:not(:last-child){margin-bottom:35px}.burger_active .burger-line{background:#fff}.burger_active .first,.burger_active .fourth{display:none}.burger_active .second,.burger_active .third{-webkit-transition:.3s ease-in-out;-o-transition:.3s ease-in-out;transition:.3s ease-in-out;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.burger_active .third{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.burger__menu_active{display:block}.backed{padding-bottom:32px}.backed__text{margin-bottom:45px}.backed__text h2{font-weight:700;font-size:36px;line-height:44px;color:#232427;margin-bottom:15px}.backed__text p,.payment__content-info p{font-weight:400;font-size:14px;line-height:14px;color:#5e5c6c}.backed__items-upp{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.backed__items-upp>*{margin-bottom:30px}.backed__items-bot{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.backed__items-bot>*{margin-bottom:30px}.backed__items-item{background:#d4d6db;border-radius:4px;-webkit-filter:drop-shadow(0 4px 24px rgba(0,0,0,.05));filter:drop-shadow(0 4px 24px rgba(0,0,0,.05));display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:20px}.backed__items-item svg{width:215px;height:122px}.backed__items-item__content h4{margin-top:15px;margin-bottom:7px;font-weight:700;font-size:16px;line-height:16px;color:#232427}.backed__items-item__content-icons svg{cursor:pointer;width:20px;height:20px}.payment{background:url(./img/paymentImg.png) no-repeat top 0 right 0;-o-object-fit:cover;object-fit:cover;padding-top:100px;padding-bottom:196px}.payment__content{max-width:530px}.payment__content-info h1{font-weight:700;font-size:48px;line-height:62px;text-shadow:0 4px 4px rgba(0,0,0,.25);margin-bottom:15px}.payment__content-info p{color:#9998a4;line-height:24px;margin-bottom:62px}.payment__content-buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.payment__content-buttons__button_withImg{min-width:144px;min-height:40px}.payment__content-buttons__button_withImg img{margin-left:7px}.payment__content-buttons__button_withImg,.payment__content-buttons__button_withText{font-weight:400;font-size:14px;line-height:14px}.payment__content-buttons>:not(:last-child){margin-right:46px}.payment__rating{margin-top:130px}.payment__rating-paragraph{color:#9998a4;text-transform:uppercase;font-weight:400;font-size:14px;line-height:24px;margin-bottom:25px}.payment__rating-info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.payment__rating-info__item h2{margin-bottom:12px;font-weight:400;font-size:36px;line-height:36px;color:#232427}.payment__rating-info__item p{font-weight:400;font-size:14px;line-height:14px;text-transform:uppercase;color:#5e5c6c}.payment__rating-info>:not(:last-child){margin-right:80px}.steps__upp{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.steps__bot>:not(:last-of-type),.steps__upp>:not(:last-of-type){margin-right:20px}.steps__bot{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.steps__item{background:#fff;border:1px solid #efeff4;border-radius:8px;padding:81px 40px 93px;max-width:346px;margin-bottom:50px}.steps__item img{margin-left:21px;margin-bottom:57px}.steps__item p{font-weight:400;font-size:14px;line-height:24px;color:#9998a4}.steps__item h4{font-weight:800;font-size:18px;line-height:18px;margin-bottom:16px}.steps__item_text{padding:0;min-width:342px;border:0;margin-right:25px!important}.steps__item_text h2{font-weight:700;font-size:36px;line-height:44px;margin-bottom:15px}.trust{color:#232427;margin-top:60px;margin-bottom:142px;padding:50px 0}.trust__title{font-weight:700;font-size:28px;line-height:28px;text-align:center}.trust__items{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly}.trust__items_upp{margin-top:44px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.trust__items_bot{margin-top:34px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.trust__items-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.trust__items-item img{width:30px;height:30px}.trust__items-item__text{font-weight:600;font-size:14px;line-height:14px;color:#232427;margin-left:12px}.trust__items-item_synthetix img{width:224px;height:17px}.trust__items-item_dydx img{width:64.14px;height:20px}.trust__items>:not(:last-child){margin-right:65px}*{font-family:"Metropolis"}@media screen and (max-width:1280px){._container{max-width:992px}.nav__li_logo{margin-right:0}}@media screen and (max-width:1024px){._container{max-width:770px}.nav__right{display:none}.burger{display:block}.payment{background:-webkit-gradient(linear,left top,left bottom,from(#faf9f9),to(rgba(255,254,254,.589))),url(./img/paymentImg.png) center/cover no-repeat;background:-o-linear-gradient(#faf9f9 ,rgba(255,254,254,.589)),url(./img/paymentImg.png) center/cover no-repeat;background:linear-gradient(#faf9f9 ,rgba(255,254,254,.589)),url(./img/paymentImg.png) center/cover no-repeat}.steps__upp{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.steps__bot,.trust__items,.trust__items_bot,.trust__items_upp{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.steps__bot,.trust__items{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.trust__items_bot,.trust__items_upp{-ms-flex-wrap:wrap;flex-wrap:wrap}.trust__items_bot>:not(:last-child),.trust__items_upp>:not(:last-child){margin:0 0 20px}}@media screen and (max-width:768px){._container{max-width:620px}}@media screen and (max-width:640px){._container{max-width:443px}.backed__items-bot,.backed__items-upp{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.payment__rating-info__item h2{font-size:25px}.payment__content-info p,.payment__rating-info__item p,.steps__item_text p{font-size:12px}.payment__rating-info>:not(:last-child){margin-right:25px}.payment__content-info h1{font-size:35px}.steps__item{margin-right:0!important}.steps__item_text{min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content}.steps__item_text h2{font-size:28px}}@media screen and (max-width:425px){._container{max-width:280px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */